theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, hjust = 0))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.2))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.1))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.05))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 1))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.5))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.1))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 15, vjust = 0.8))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust = 0.8))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust = 0.6))
# create a boxplot showing the distribution of ethnicity percentages across Walsall OAs
ggplot(walsall_summary_long, aes(Ethnicity, Percent)) +
geom_boxplot() + # add boxplots for each ethnic group
theme_bw() + # apply a clean black-and-white them
ggtitle("Distribution of Ethnicity Percentages in Walsall OAs") + # plot title
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust = 0.6))
walsall_summary_statistics <- walsall_summary_long %>%
group_by(Ethnicity) %>%
summarise(mean = mean(Percent), median = median(Percent), maximum = max(Percent), minimum = min(Percent)) %>%
mutate(across(c(mean, median, maximum, minimum), ~ round(.x, 1)))
```
walsall_summary_statistics <- walsall_summary_long %>%
group_by(Ethnicity) %>%
summarise(mean = mean(Percent), median = median(Percent), maximum = max(Percent), minimum = min(Percent)) %>%
mutate(across(c(mean, median, maximum, minimum), ~ round(.x, 1)))
```
```{r}
walsall_summary_statistics <- walsall_summary_long %>%
group_by(Ethnicity) %>%
summarise(mean = mean(Percent), median = median(Percent), maximum = max(Percent), minimum = min(Percent)) %>%
mutate(across(c(mean, median, maximum, minimum), ~ round(.x, 1)))
```
walsall_summary_statistics <- walsall_summary_long %>%
group_by(Ethnicity) %>%
summarise(mean = mean(Percent), median = median(Percent), maximum = max(Percent), minimum = min(Percent)) %>%
mutate(across(c(mean, median, maximum, minimum), ~ round(.x, 1)))
# calculate summary statistics (mean, median, maximum, minimum) for ethnicity percentages in Walsall OAs
walsall_summary_statistics <- walsall_summary_long %>%
group_by(Ethnicity) %>% # group data by Ethnicity category
summarise(
mean = mean(Percent), # calculate average percentage
median = median(Percent), # calculate median percentage
maximum = max(Percent), # calculate maximum percentage value
minimum = min(Percent) # calculate minimum percentage
) %>%
mutate(across(c(mean, median, maximum, minimum), ~ round(.x, 1)))
View(output_area_shapes)
# create thematic map visualising percentages of White British and Pakistani groups in Walsall Output Areas
tm_shape(walsall_map) +
tm_fill(col = c("p_White_British", "p_Indian"), # columns to visualise as percentages
title = c("% White British", "% Indian"),
style = "fixed", # use fixed intervals for colour breaks
breaks = c(0, 10, 20, 50, 100)) + # defined intervals (0-10, 10-20, 20-50, 50-100)
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("LEFT", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "% of White British and Indian Populations in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# recalculate percentage-based ethnicity columns to the Walsall spatial data frame
walsall_map <- mutate(walsall_map, across(White_British:Other_groups, ~.x/Total_OA_pop*100,.names = paste("p", "{.col}", sep = "_")))
# merge shapefile with Walsall's ethnicity data to create a spatial data frame using the OA21CD and OA_code column
# default merging will drop all row which do not appear in both the datasets that are being merged - only the Walsall OAs will be left after merging
walsall_map <- merge(output_area_shapes, walsall_OAs, by.x = "OA21CD", by.y = "OA_code")
# recalculate percentage-based ethnicity columns to the Walsall spatial data frame
walsall_map <- mutate(walsall_map, across(White_British:Other_groups, ~.x/Total_OA_pop*100,.names = paste("p", "{.col}", sep = "_")))
# create thematic map visualising percentages of White British and Pakistani groups in Walsall Output Areas
tm_shape(walsall_map) +
tm_fill(col = c("p_White_British", "p_Indian"), # columns to visualise as percentages
title = c("% White British", "% Indian"),
style = "fixed", # use fixed intervals for colour breaks
breaks = c(0, 10, 20, 50, 100)) + # defined intervals (0-10, 10-20, 20-50, 50-100)
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("LEFT", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "% of White British and Indian Populations in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
dissimilarity_index_3 <- id(walsall_OAs, vars = c("Indian", "White_British"))
# generate spatial neighbour relationships for Walsall OAs using Queen's contiguity
neighbour_OAs <- poly2nb(walsall_map, queen = TRUE)
# provide summary statistics of the neighbourhood relationships
summary(neighbour_OAs)
install.packages("MLID")
library(MLID)
# calculate the Index of Dissimilarity between Indian and White British populations in Walsall OAs
dissimilarity_index_3 <- id(walsall_OAs, vars = c("Indian", "White_British"))
# inspect
dissimilarity_index_3
# load the here library or managing file paths in projects
library(here)
# load 'MLID' package for calculating measures of segregation and inequality
library(MLID)
# load tidyverse package for data manipulation and visualiation
library(tidyverse)
# load sf package for handling spatial data
library(sf)
# load tmap for creating thematic maps
library(tmap)
# load spdep package for spatial dependence analysis
library(spdep)
# generate spatial neighbour relationships for Walsall OAs using Queen's contiguity
neighbour_OAs <- poly2nb(walsall_map, queen = TRUE)
# provide summary statistics of the neighbourhood relationships
summary(neighbour_OAs)
# plot the geographic boundaries of Bradford's Output Areas
plot(walsall_map$geometry)
# overlay neighbourhood connections onto the map
plot(
neighbour_OAs, # adjacency matrix
coords = walsall_map$geometry, # plot neighbour connections from polygon centroids
col ="red", # colour of neighbour lines
add  = T # add neighbour lines to existing plot
)
# create neighbour relationships to spatial weights list format
neighbour_OAs <- nb2listw(neighbour_OAs)
# calculate Getis-Ord Gi* statistic for spatial clustering (hot/cold spots) for "White British" group
g_White_British <- localG(walsall_map$p_White_British, neighbour_OAs)
# calculate Getis-Ord Gi* statistic for spatial clustering (hot/cold spots) for "Indian" group
g_Indian <- localG(walsall_map$p_Indian, neighbour_OAs)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("LEFT", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# append calculated Gi* statistic for White British to the spatial data frame
g_map <- cbind(walsall_map, as.matrix(g_White_British)) %>%
rename(g_White_British = as.matrix.g_White_British.)
# append calculated Gi* statistic for Indian to the spatial data frame
g_map <- cbind(g_map, as.matrix(g_Indian)) %>%
rename(g_Indian = as.matrix.g_Indian.)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("LEFT", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("CENTER", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("MIDDLE", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("CENTRE", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("CENTER", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("center", "BOTTOM")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("center", "bottom")) +
tm_compass(position = c("RIGHT", "TOP")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create a thematic map to visualise hotspots and coldspots for White British and Pakistani populations
tm_shape(g_map) +
tm_fill(c("g_White_British", "g_Indian"), # visualise Gi* values for both ethnic groups
palette = "-RdBu", # diverging palette to highligh hot and cold spots
style = "fixed", # fixed breaks for significance thresholds
breaks = c(-10, -2.58, -1.96, 1.96, 2.58, 10), # thresholds for isgnificance (95% and 99%)
title = c("White British (Gi*)", "Indian (Gi*)")) + # titles in the legend
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("center", "bottom")) +
tm_compass(position = c("right", "top")) +
tm_layout(main.title = "Hotspots and Coldspots for Ethnic Groups in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# create thematic map visualising percentages of White British and Pakistani groups in Walsall Output Areas
tm_shape(walsall_map) +
tm_fill(col = c("p_White_British", "p_Indian"), # columns to visualise as percentages
title = c("% White British", "% Indian"),
style = "fixed", # use fixed intervals for colour breaks
breaks = c(0, 10, 20, 50, 100)) + # defined intervals (0-10, 10-20, 20-50, 50-100)
tm_borders(col = "darkgrey",
alpha = .25) +
tm_scale_bar(position = c("center", "bottom")) +
tm_compass(position = c("right", "top")) +
tm_layout(main.title = "% of White British and Indian Populations in Walsall OAs",
main.title.position = c("center", "top"),
main.title.size = 1.2,
main.title.fontface = "bold",
legend.frame = TRUE,
legend.title.size = 1)
# load stargazer to created well-formatted output tables
library(stargazer)
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White ritish & Indian",
Dissimilarity_Index = round(dissimilarity_index_3, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall")
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White ritish & Indian",
Dissimilarity_Index = round(dissimilarity_index_3, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall")
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3$ID
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
View(dissimilarity_index_3)
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3$value
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3$Value
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
class(dissimilarity_index_3)
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3
dissimilarity_value = as.numeric(dissimilarity_index_3)
dissimilarity_value
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall")
dissimilarity_df
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall")
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
dissimilarity_df
str(dissimilarity_df)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSES)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# use stargazer to create a table
kable(dissimilarity_df, caption = "Index of Dissimilarity in Walsall")
library(knitr)
# use stargazer to create a table
kable(dissimilarity_df, caption = "Index of Dissimilarity in Walsall")
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# inspect
# the dissimilarity value of 0.54 is high but not as much as that between the White British and Pakistani populations in Bradford as we saw earlier in the map
dissimilarity_index_3
# extract the numeric index value
dissimilarity_value = as.numeric(dissimilarity_index_3)
# extract the numeric index value
dissimilarity_value <-  as.numeric(dissimilarity_index_3)
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
dissimilarity_df
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = TRUE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# convert dissimilartiy index into a data frame
dissimilarity_df <- data_frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# convert dissimilartiy index into a data frame
dissimilarity_df <- data.frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
dissimilarity_df
# convert dissimilartiy index into a data frame
dissimilarity_df <- as.data.frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# convert dissimilartiy index into a data frame
dissimilarity_df <- data.frame(
Ethnic_Groups = "White British & Indian",
Dissimilarity_Index = round(dissimilarity_value, 2) # round to 2 decimal places
)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
library(gt)
install.packages(gt)
install.packages("gt")
library(gt)
dissimilarity_df %>%
gt() %>%
tab_header(title = "Index of Dissimilarity in Walsall")
install.packages("pander")
library(pander)
# use stargazer to create a table
stargazer(dissimilarity_df, type = "text", summary = FALSE, title = "Index of Dissimilarity in Walsall", rownames = FALSE)
pander(dissimilarity_df, caption = "Index of Dissimilarity in Walsall")
library(xtable)
print(xtable(dissimilarity_df, caption = "Index of Dissimilarity in Walsall"), type = "latex")
library(flextable)
install.packages("flextable")
library(flextable)
library(flextable)
library(stargazer)
# flextable
dissimilarity_df %>%
flextable() %>%
set_caption("Index of Dissimilarity in Walsall")
NSSEC_OAs <- read_csv(here("Practical and Evidence Brief resources-20250311", "NSSEC_OA_2021.csv"))
